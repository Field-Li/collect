<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tool
        http://www.springframework.org/schema/tool/spring-tool-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
   
   		<!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    	<context:component-scan base-package="com"/>

    	<!-- AOP -->
    	<aop:aspectj-autoproxy proxy-target-class="true"/>
    	<!-- enable auto-wired -->
    	<context:annotation-config/>
		<!-- 定义自己的datasource factory -->
		<bean id="dataSourceFactory" class="com.common.utils.DataSourceFactory" destroy-method="destroy"/>
		<!-- 定义datasource -->
		<bean id="wormHotelDataSource" factory-bean="dataSourceFactory" factory-method="getDataSource">
			<constructor-arg type="java.lang.String" value="GroupWormholeDB_W"/>
		</bean>
		<!--
    	<bean id="wormHotelDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
    		<property name="jndiName" value="${groupwormhotel}"/>
    	</bean>
    	-->
    	<bean id="wormHotelTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    		<property name="dataSource" ref="wormHotelDataSource" />
    	</bean>
    	<bean id="wormHotelSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    		<property name="dataSource" ref="wormHotelDataSource" />
    		<property name="mapperLocations" value="classpath*:com/mysql/mapper/*Mapper.xml"/>
    	</bean>
    	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    		<property name="basePackage" value="com.mysql.mapper" />
    		<property name="sqlSessionFactoryBeanName" value="wormHotelSqlSessionFactory" />
    	</bean>
    	<tx:annotation-driven transaction-manager="wormHotelTransactionManager" />


	<mvc:interceptors>
		<bean class="com.controller.mybatisInteceptor.SqlCostInterceptor"/>
	</mvc:interceptors>
    	<!--groupckvdb-->
		<!-- 定义datasource -->
		<!--<bean id="groupckvDataSource" factory-bean="dataSourceFactory" factory-method="getDataSource">
			<constructor-arg type="java.lang.String" value="GroupCkvDB_W"/>
		</bean>-->
		<!--
		<bean id="groupckvDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
			<property name="jndiName" value="${groupckv}"/>
		</bean>
		-->
		<!--<bean id="groupckvTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="groupckvDataSource" />
		</bean>
		<bean id="groupckvSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="groupckvDataSource" />
			<property name="mapperLocations" value="classpath*:com/mysql/mapper/*Mapper.xml"/>
		</bean>
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="bnb.comment.service.dao.groupckv.mapper" />
			<property name="sqlSessionFactoryBeanName" value="groupckvSqlSessionFactory" />
		</bean>
		<tx:annotation-driven transaction-manager="groupckvTransactionManager" />-->
	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!--property name="freemarkerSettings" ref="freemarkerConfiguration"/-->
		<property name="templateLoaderPath" value="/WEB-INF/ftl/"/>
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>

	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="contentType" value="text/html; charset=utf-8"/>
		<property name="cache" value="true"/>
		<property name="prefix" value=""/>
		<property name="suffix" value=".ftl"/>
		<property name="order" value="2"/>
		<property name="requestContextAttribute" value="base"/>
		<property name="viewClass" value="com.global.MyFreeMarkerView"/>
	</bean>
	<bean id="viewResolver1" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="contentType" value="text/html; charset=utf-8"/>
		<property name="cache" value="true"/>
		<property name="prefix" value="/WEB-INF/ftl/"/>
		<property name="suffix" value=".jsp"/>
		<property name="order" value="2"/>
		<property name="requestContextAttribute" value="base"/>
		<property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView"/>
	</bean>
 </beans>